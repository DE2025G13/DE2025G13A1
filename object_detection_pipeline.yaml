# PIPELINE DEFINITION
# Name: yolo-glasses-detection-pipeline
# Description: End-to-end pipeline for training and deploying glasses detection model
# Inputs:
#    cd_trigger_id: str [Default: 'deploy-glasses-app']
#    model_bucket: str [Default: 'glasses-model']
#    pipeline_root: str [Default: 'gs://glasses-temp/pipeline-root']
#    processed_bucket: str [Default: 'glasses-data']
#    project_id: str [Default: 'data-engineering-vm']
#    raw_bucket: str [Default: 'glasses-data']
components:
  comp-auto-labeler:
    executorLabel: exec-auto-labeler
    inputDefinitions:
      parameters:
        processed_bucket_name:
          parameterType: STRING
        processed_prefix:
          parameterType: STRING
        raw_bucket_name:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        labeled_dataset:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-condition-1:
    dag:
      tasks:
        trigger-cd-pipeline:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-trigger-cd-pipeline
          inputs:
            parameters:
              new_model_uri:
                runtimeValue:
                  constant: gs://{{$.inputs.parameters['pipelinechannel--model_bucket']}}/candidate_models/{{$.pipeline_job_name}}/best.pt
              pipelinechannel--model_bucket:
                componentInputParameter: pipelinechannel--model_bucket
              project_id:
                componentInputParameter: pipelinechannel--project_id
              trigger_id:
                componentInputParameter: pipelinechannel--cd_trigger_id
          taskInfo:
            name: trigger-cd-pipeline
    inputDefinitions:
      parameters:
        pipelinechannel--cd_trigger_id:
          parameterType: STRING
        pipelinechannel--model-evaluator-decision:
          parameterType: STRING
        pipelinechannel--model_bucket:
          parameterType: STRING
        pipelinechannel--project_id:
          parameterType: STRING
  comp-dataset-splitter:
    executorLabel: exec-dataset-splitter
    inputDefinitions:
      parameters:
        bucket_name:
          parameterType: STRING
        prefix:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        data_yaml_artifact:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-model-evaluator:
    executorLabel: exec-model-evaluator
    inputDefinitions:
      parameters:
        data_yaml_uri:
          parameterType: STRING
        new_model_uri:
          parameterType: STRING
        prod_model_uri:
          parameterType: STRING
    outputDefinitions:
      parameters:
        decision:
          parameterType: STRING
  comp-trigger-cd-pipeline:
    executorLabel: exec-trigger-cd-pipeline
    inputDefinitions:
      parameters:
        new_model_uri:
          parameterType: STRING
        project_id:
          parameterType: STRING
        trigger_id:
          parameterType: STRING
  comp-yolo-trainer:
    executorLabel: exec-yolo-trainer
    inputDefinitions:
      parameters:
        data_yaml_uri:
          parameterType: STRING
        output_blob_name:
          parameterType: STRING
        output_bucket_name:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        model_artifact:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-auto-labeler:
      container:
        command:
        - python3
        - component.py
        - --raw-bucket-name
        - '{{$.inputs.parameters[''raw_bucket_name'']}}'
        - --processed-bucket-name
        - '{{$.inputs.parameters[''processed_bucket_name'']}}'
        - --processed-prefix
        - '{{$.inputs.parameters[''processed_prefix'']}}'
        image: europe-west4-docker.pkg.dev/data-engineering-vm/ml-services/auto-labeler:latest
    exec-dataset-splitter:
      container:
        command:
        - python3
        - component.py
        - --bucket-name
        - '{{$.inputs.parameters[''bucket_name'']}}'
        - --prefix
        - '{{$.inputs.parameters[''prefix'']}}'
        image: europe-west4-docker.pkg.dev/data-engineering-vm/ml-services/dataset-splitter:latest
    exec-model-evaluator:
      container:
        command:
        - bash
        - -c
        - python component.py --data-yaml-uri {{$.inputs.parameters['data_yaml_uri']}}
          --new-model-uri {{$.inputs.parameters['new_model_uri']}} --prod-model-uri
          {{$.inputs.parameters['prod_model_uri']}} > {{$.outputs.parameters['decision'].output_file}}
        image: europe-west4-docker.pkg.dev/data-engineering-vm/ml-services/model-evaluator:latest
        resources:
          accelerator:
            count: '1'
            resourceCount: '1'
            resourceType: NVIDIA_TESLA_T4
            type: NVIDIA_TESLA_T4
    exec-trigger-cd-pipeline:
      container:
        command:
        - bash
        - -c
        - "\n            set -e\n            ACCESS_TOKEN=$(gcloud auth print-access-token)\n\
          \            curl -X POST -H \"Authorization: Bearer $ACCESS_TOKEN\"   \
          \               -H \"Content-Type: application/json\"                  \"\
          https://cloudbuild.googleapis.com/v1/projects/{{$.inputs.parameters['project_id']}}/triggers/{{$.inputs.parameters['trigger_id']}}:run\"\
          \                  -d '{\"substitutions\":{\"_NEW_MODEL_URI\":\"{{$.inputs.parameters['new_model_uri']}}\"\
          }}'\n            "
        image: google/cloud-sdk:slim
    exec-yolo-trainer:
      container:
        command:
        - python
        - component.py
        - --data-yaml-uri
        - '{{$.inputs.parameters[''data_yaml_uri'']}}'
        - --output-bucket-name
        - '{{$.inputs.parameters[''output_bucket_name'']}}'
        - --output-blob-name
        - '{{$.inputs.parameters[''output_blob_name'']}}'
        image: europe-west4-docker.pkg.dev/data-engineering-vm/ml-services/yolo-trainer:latest
        resources:
          accelerator:
            count: '1'
            resourceCount: '1'
            resourceType: NVIDIA_TESLA_T4
            type: NVIDIA_TESLA_T4
pipelineInfo:
  description: End-to-end pipeline for training and deploying glasses detection model
  name: yolo-glasses-detection-pipeline
root:
  dag:
    tasks:
      auto-labeler:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-auto-labeler
        inputs:
          parameters:
            processed_bucket_name:
              componentInputParameter: processed_bucket
            processed_prefix:
              runtimeValue:
                constant: labeled_data/run-{{$.pipeline_job_name}}
            raw_bucket_name:
              componentInputParameter: raw_bucket
        taskInfo:
          name: auto-labeler
      condition-1:
        componentRef:
          name: comp-condition-1
        dependentTasks:
        - model-evaluator
        inputs:
          parameters:
            pipelinechannel--cd_trigger_id:
              componentInputParameter: cd_trigger_id
            pipelinechannel--model-evaluator-decision:
              taskOutputParameter:
                outputParameterKey: decision
                producerTask: model-evaluator
            pipelinechannel--model_bucket:
              componentInputParameter: model_bucket
            pipelinechannel--project_id:
              componentInputParameter: project_id
        taskInfo:
          name: deploy-new-model
        triggerPolicy:
          condition: inputs.parameter_values['pipelinechannel--model-evaluator-decision']
            == 'deploy'
      dataset-splitter:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-dataset-splitter
        dependentTasks:
        - auto-labeler
        inputs:
          parameters:
            bucket_name:
              componentInputParameter: processed_bucket
            prefix:
              runtimeValue:
                constant: labeled_data/run-{{$.pipeline_job_name}}
        taskInfo:
          name: dataset-splitter
      model-evaluator:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-evaluator
        dependentTasks:
        - yolo-trainer
        inputs:
          parameters:
            data_yaml_uri:
              runtimeValue:
                constant: gs://{{$.inputs.parameters['pipelinechannel--processed_bucket']}}/labeled_data/run-{{$.pipeline_job_name}}/data.yaml
            new_model_uri:
              runtimeValue:
                constant: gs://{{$.inputs.parameters['pipelinechannel--model_bucket']}}/candidate_models/{{$.pipeline_job_name}}/best.pt
            pipelinechannel--model_bucket:
              componentInputParameter: model_bucket
            pipelinechannel--processed_bucket:
              componentInputParameter: processed_bucket
            prod_model_uri:
              runtimeValue:
                constant: gs://{{$.inputs.parameters['pipelinechannel--model_bucket']}}/production_model/best.pt
        taskInfo:
          name: model-evaluator
      yolo-trainer:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-yolo-trainer
        dependentTasks:
        - dataset-splitter
        inputs:
          parameters:
            data_yaml_uri:
              runtimeValue:
                constant: gs://{{$.inputs.parameters['pipelinechannel--processed_bucket']}}/labeled_data/run-{{$.pipeline_job_name}}/data.yaml
            output_blob_name:
              runtimeValue:
                constant: candidate_models/{{$.pipeline_job_name}}/best.pt
            output_bucket_name:
              componentInputParameter: model_bucket
            pipelinechannel--processed_bucket:
              componentInputParameter: processed_bucket
        taskInfo:
          name: yolo-trainer
  inputDefinitions:
    parameters:
      cd_trigger_id:
        defaultValue: deploy-glasses-app
        isOptional: true
        parameterType: STRING
      model_bucket:
        defaultValue: glasses-model
        isOptional: true
        parameterType: STRING
      pipeline_root:
        defaultValue: gs://glasses-temp/pipeline-root
        isOptional: true
        parameterType: STRING
      processed_bucket:
        defaultValue: glasses-data
        isOptional: true
        parameterType: STRING
      project_id:
        defaultValue: data-engineering-vm
        isOptional: true
        parameterType: STRING
      raw_bucket:
        defaultValue: glasses-data
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.6
