# This file builds all component images and then triggers a validation pipeline run.
options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # All the component build steps remain exactly the same.
  - name: "gcr.io/cloud-builders/docker"
    id: "BuildDataIngestion"
    args: ["build", "-t", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/data-ingestion:latest", "."]
    dir: "components/data-ingestion"
  - name: "gcr.io/cloud-builders/docker"
    id: "BuildSplitter"
    args: ["build", "-t", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/train-test-splitter:latest", "."]
    dir: "components/train-test-splitter"
  - name: "gcr.io/cloud-builders/docker"
    id: "BuildRandomForest"
    args: ["build", "-t", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-rf:latest", "."]
    dir: "components/model-trainers/random-forest"
  - name: "gcr.io/cloud-builders/docker"
    id: "BuildXGBoost"
    args: ["build", "-t", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-xgb:latest", "."]
    dir: "components/model-trainers/xgboost"
  - name: "gcr.io/cloud-builders/docker"
    id: "BuildSVM"
    args: ["build", "-t", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-svm:latest", "."]
    dir: "components/model-trainers/svm"
  - name: "gcr.io/cloud-builders/docker"
    id: "BuildEvaluator"
    args: ["build", "-t", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-evaluator:latest", "."]
    dir: "components/model-evaluator"
  - name: "gcr.io/cloud-builders/docker"
    id: "BuildTriggerCD"
    args: ["build", "-t", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/trigger-cd:latest", "."]
    dir: "components/trigger-cd"
  # Step 1: Use a python container to install SDKs and compile the pipeline.
  - name: "python:3.9-slim"
    id: "CompilePipeline"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        pip install google-cloud-aiplatform kfp
        python3 pipeline.py
    # This step will only start after all the Docker image builds are complete.
    waitFor: ["BuildDataIngestion", "BuildSplitter", "BuildRandomForest", "BuildXGBoost", "BuildSVM", "BuildEvaluator", "BuildTriggerCD"]
  # Step 2: Use the Google Cloud SDK container to run the compiled pipeline.
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "RunTrainingPipeline"
    entrypoint: "gcloud"
    args:
      - "ai"
      - "pipelines"
      - "run"
      - "--project=${PROJECT_ID}"
      - "--region=europe-west4"
      - "--template-path=wine_quality_pipeline_git_triggered.yaml"
      - "--display-name=ci-triggered-run-${SHORT_SHA}"
      - "--pipeline-root=gs://yannick-pipeline-root"
      - "--service-account=793868790421-compute@developer.gserviceaccount.com"
      - "--enable-caching=false"
    # This step must wait for the compilation to finish.
    waitFor: ["CompilePipeline"]
# The list of images to push remains the same.
images:
  - "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/data-ingestion:latest"
  - "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/train-test-splitter:latest"
  - "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-rf:latest"
  - "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-xgb:latest"
  - "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-svm:latest"
  - "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-evaluator:latest"
  - "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/trigger-cd:latest"