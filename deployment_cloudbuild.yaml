# This file defines the Continuous Deployment pipeline for our application.
options:
  logging: CLOUD_LOGGING_ONLY
steps:
  # First, copy the new model chosen by the ML pipeline into the production location.
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "${_NEW_MODEL_URI}", "gs://yannick-wine-models/production_model/model.joblib"]
  # Build the container for the prediction API.
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/prediction-api:latest", "."]
    dir: "prediction-api"
  # Push the API container image to the registry.
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/prediction-api:latest"]
  # Deploy the API image to Cloud Run, making it a private service.
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: DeployAPI
    entrypoint: "gcloud"
    args:
      - "run"
      - "deploy"
      - "prediction-api"
      - "--image=europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/prediction-api:latest"
      - "--region=europe-west4"
      - "--platform=managed"
      - "--no-allow-unauthenticated"
      - "--set-env-vars=MODEL_BUCKET=yannick-wine-models"
      - "--memory=2Gi"
      - "--min-instances=1"
  # After deploying, get the unique URL of the new API service.
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: GetApiUrl
    entrypoint: "bash"
    args: ["-c", "gcloud run services describe prediction-api --platform=managed --region=europe-west4 --format='value(status.url)' > /workspace/api_url.txt"]
    waitFor: ["DeployAPI"]
  # Build the container for the user interface.
  - name: "gcr.io/cloud-builders/docker"
    id: BuildUI
    args: ["build", "-t", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/prediction-ui:latest", "."]
    dir: "prediction-ui"
  # Push the UI container image to the registry.
  - name: "gcr.io/cloud-builders/docker"
    id: PushUI
    args: ["push", "europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/prediction-ui:latest"]
    waitFor: ["BuildUI"]
  # Deploy the UI image to Cloud Run, making it a public service.
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # Inject the private API's URL as an environment variable into the public UI container.
        API_URL=$(cat /workspace/api_url.txt)
        gcloud run deploy prediction-ui \
          --image=europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/prediction-ui:latest \
          --region=europe-west4 \
          --platform=managed \
          --allow-unauthenticated \
          --set-env-vars=PREDICTOR_API_URL=$$API_URL
    waitFor: ["GetApiUrl", "PushUI"]