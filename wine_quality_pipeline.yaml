# PIPELINE DEFINITION
# Name: wine-quality-end-to-end-pipeline-v9
# Inputs:
#    cd_trigger_id: str [Default: 'deploy-wine-app-trigger']
#    data_bucket: str [Default: 'yannick-wine-data']
#    model_bucket: str [Default: 'yannick-wine-models']
#    project_id: str [Default: 'data-engineering-vm']
components:
  comp-condition-1:
    dag:
      tasks:
        trigger-cd-pipeline-op:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-trigger-cd-pipeline-op
          inputs:
            parameters:
              best_model_name:
                componentInputParameter: pipelinechannel--model-evaluator-op-best_model_name
              new_model_uri:
                componentInputParameter: pipelinechannel--model-evaluator-op-best_model_uri
              project_id:
                componentInputParameter: pipelinechannel--project_id
              trigger_id:
                componentInputParameter: pipelinechannel--cd_trigger_id
          taskInfo:
            name: trigger-cd-pipeline-op
    inputDefinitions:
      parameters:
        pipelinechannel--cd_trigger_id:
          parameterType: STRING
        pipelinechannel--model-evaluator-op-best_model_name:
          parameterType: STRING
        pipelinechannel--model-evaluator-op-best_model_uri:
          parameterType: STRING
        pipelinechannel--model-evaluator-op-decision:
          parameterType: STRING
        pipelinechannel--project_id:
          parameterType: STRING
  comp-data-ingestion-op:
    executorLabel: exec-data-ingestion-op
    inputDefinitions:
      parameters:
        blob_name:
          parameterType: STRING
        bucket_name:
          parameterType: STRING
        error_log_bucket:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        raw_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
  comp-model-evaluator-op:
    executorLabel: exec-model-evaluator-op
    inputDefinitions:
      artifacts:
        decision_tree_model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
        linear_regression_model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
        logistic_regression_model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
        testing_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        model_bucket_name:
          parameterType: STRING
        prod_model_blob:
          parameterType: STRING
    outputDefinitions:
      parameters:
        best_model_name:
          parameterType: STRING
        best_model_uri:
          parameterType: STRING
        decision:
          parameterType: STRING
  comp-train-model-op:
    executorLabel: exec-train-model-op
    inputDefinitions:
      artifacts:
        training_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        image:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
  comp-train-model-op-2:
    executorLabel: exec-train-model-op-2
    inputDefinitions:
      artifacts:
        training_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        image:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
  comp-train-model-op-3:
    executorLabel: exec-train-model-op-3
    inputDefinitions:
      artifacts:
        training_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        image:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
  comp-train-test-splitter-op:
    executorLabel: exec-train-test-splitter-op
    inputDefinitions:
      artifacts:
        input_dataset:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        testing_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
        training_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
  comp-trigger-cd-pipeline-op:
    executorLabel: exec-trigger-cd-pipeline-op
    inputDefinitions:
      parameters:
        best_model_name:
          parameterType: STRING
        new_model_uri:
          parameterType: STRING
        project_id:
          parameterType: STRING
        trigger_id:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-data-ingestion-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - data_ingestion_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef data_ingestion_op(\n    bucket_name: str,\n    blob_name: str,\n\
          \    error_log_bucket: str\n) -> NamedTuple(\"outputs\", [(\"raw_dataset\"\
          , Dataset)]):\n    \"\"\"Factory for the data ingestion container component.\"\
          \"\"\n    # FIX: Import ContainerSpec inside the function to ensure it's\
          \ packaged by the compiler.\n    from kfp.dsl import ContainerSpec\n\n \
          \   return ContainerSpec(\n        image='europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/data-ingestion:latest',\n\
          \        command=[\"python3\", \"component.py\"],\n        args=[\n    \
          \        \"--bucket-name\", bucket_name,\n            \"--blob-name\", blob_name,\n\
          \            \"--output-dataset-path\", dsl.OutputPath(\"raw_dataset\"),\n\
          \            \"--error-log-bucket\", error_log_bucket,\n        ]\n    )\n\
          \n"
        image: python:3.9
    exec-model-evaluator-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - model_evaluator_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef model_evaluator_op(\n    testing_data: Input[Dataset],\n    decision_tree_model:\
          \ Input[Model],\n    linear_regression_model: Input[Model],\n    logistic_regression_model:\
          \ Input[Model],\n    model_bucket_name: str,\n    prod_model_blob: str,\n\
          ) -> NamedTuple(\"outputs\", [(\"decision\", str), (\"best_model_uri\",\
          \ str), (\"best_model_name\", str)]):\n    \"\"\"Factory for the model evaluator\
          \ component.\"\"\"\n    # FIX: Import ContainerSpec inside the function.\n\
          \    from kfp.dsl import ContainerSpec\n\n    return ContainerSpec(\n  \
          \      image='europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-evaluator:latest',\n\
          \        command=[\"python3\", \"component.py\"],\n        args=[\n    \
          \        \"--testing_data_path\", dsl.InputPath(testing_data),\n       \
          \     \"--decision_tree_model_path\", dsl.InputPath(decision_tree_model),\n\
          \            \"--linear_regression_model_path\", dsl.InputPath(linear_regression_model),\n\
          \            \"--logistic_regression_model_path\", dsl.InputPath(logistic_regression_model),\n\
          \            \"--model_bucket_name\", model_bucket_name,\n            \"\
          --prod_model_blob\", prod_model_blob,\n            \"--decision\", dsl.OutputPath(\"\
          decision\"),\n            \"--best_model_uri\", dsl.OutputPath(\"best_model_uri\"\
          ),\n            \"--best_model_name\", dsl.OutputPath(\"best_model_name\"\
          ),\n        ]\n    )\n\n"
        image: python:3.9
    exec-train-model-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model_op(\n    image: str,\n    training_data: Input[Dataset]\n\
          ) -> NamedTuple(\"outputs\", [(\"model\", Model)]):\n    \"\"\"Factory for\
          \ a generic model training component.\"\"\"\n    # FIX: Import ContainerSpec\
          \ inside the function.\n    from kfp.dsl import ContainerSpec\n\n    return\
          \ ContainerSpec(\n        image=image,\n        command=[\"python3\", \"\
          component.py\"],\n        args=[\n            \"--training_data_path\",\
          \ dsl.InputPath(training_data),\n            \"--model_artifact_path\",\
          \ dsl.OutputPath(\"model\"),\n        ]\n    )\n\n"
        image: python:3.9
    exec-train-model-op-2:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model_op(\n    image: str,\n    training_data: Input[Dataset]\n\
          ) -> NamedTuple(\"outputs\", [(\"model\", Model)]):\n    \"\"\"Factory for\
          \ a generic model training component.\"\"\"\n    # FIX: Import ContainerSpec\
          \ inside the function.\n    from kfp.dsl import ContainerSpec\n\n    return\
          \ ContainerSpec(\n        image=image,\n        command=[\"python3\", \"\
          component.py\"],\n        args=[\n            \"--training_data_path\",\
          \ dsl.InputPath(training_data),\n            \"--model_artifact_path\",\
          \ dsl.OutputPath(\"model\"),\n        ]\n    )\n\n"
        image: python:3.9
    exec-train-model-op-3:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model_op(\n    image: str,\n    training_data: Input[Dataset]\n\
          ) -> NamedTuple(\"outputs\", [(\"model\", Model)]):\n    \"\"\"Factory for\
          \ a generic model training component.\"\"\"\n    # FIX: Import ContainerSpec\
          \ inside the function.\n    from kfp.dsl import ContainerSpec\n\n    return\
          \ ContainerSpec(\n        image=image,\n        command=[\"python3\", \"\
          component.py\"],\n        args=[\n            \"--training_data_path\",\
          \ dsl.InputPath(training_data),\n            \"--model_artifact_path\",\
          \ dsl.OutputPath(\"model\"),\n        ]\n    )\n\n"
        image: python:3.9
    exec-train-test-splitter-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_test_splitter_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_test_splitter_op(\n    input_dataset: Input[Dataset]\n\
          ) -> NamedTuple(\"outputs\", [(\"training_data\", Dataset), (\"testing_data\"\
          , Dataset)]):\n    \"\"\"Factory for the train-test splitter component.\"\
          \"\"\n    # FIX: Import ContainerSpec inside the function.\n    from kfp.dsl\
          \ import ContainerSpec\n\n    return ContainerSpec(\n        image='europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/train-test-splitter:latest',\n\
          \        command=[\"python3\", \"component.py\"],\n        args=[\n    \
          \        \"--input-dataset-path\", dsl.InputPath(input_dataset),\n     \
          \       \"--training-data-path\", dsl.OutputPath(\"training_data\"),\n \
          \           \"--testing-data-path\", dsl.OutputPath(\"testing_data\"),\n\
          \        ]\n    )\n\n"
        image: python:3.9
    exec-trigger-cd-pipeline-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - trigger_cd_pipeline_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef trigger_cd_pipeline_op(\n    project_id: str,\n    trigger_id:\
          \ str,\n    new_model_uri: str,\n    best_model_name: str,\n):\n    \"\"\
          \"Factory for the CD trigger component.\"\"\"\n    # FIX: Import ContainerSpec\
          \ inside the function.\n    from kfp.dsl import ContainerSpec\n\n    return\
          \ ContainerSpec(\n        image='europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/trigger-cd:latest',\n\
          \        command=[\"python3\", \"component.py\"],\n        args=[\n    \
          \        \"--project-id\", project_id,\n            \"--trigger-id\", trigger_id,\n\
          \            \"--new-model-uri\", new_model_uri,\n            \"--best-model-name\"\
          , best_model_name,\n        ]\n    )\n\n"
        image: python:3.9
pipelineInfo:
  name: wine-quality-end-to-end-pipeline-v9
root:
  dag:
    tasks:
      condition-1:
        componentRef:
          name: comp-condition-1
        dependentTasks:
        - model-evaluator-op
        inputs:
          parameters:
            pipelinechannel--cd_trigger_id:
              componentInputParameter: cd_trigger_id
            pipelinechannel--model-evaluator-op-best_model_name:
              taskOutputParameter:
                outputParameterKey: best_model_name
                producerTask: model-evaluator-op
            pipelinechannel--model-evaluator-op-best_model_uri:
              taskOutputParameter:
                outputParameterKey: best_model_uri
                producerTask: model-evaluator-op
            pipelinechannel--model-evaluator-op-decision:
              taskOutputParameter:
                outputParameterKey: decision
                producerTask: model-evaluator-op
            pipelinechannel--project_id:
              componentInputParameter: project_id
        taskInfo:
          name: if-new-model-is-better
        triggerPolicy:
          condition: inputs.parameter_values['pipelinechannel--model-evaluator-op-decision']
            == 'deploy_new'
      data-ingestion-op:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-data-ingestion-op
        inputs:
          parameters:
            blob_name:
              runtimeValue:
                constant: raw/WineQT.csv
            bucket_name:
              componentInputParameter: data_bucket
            error_log_bucket:
              componentInputParameter: data_bucket
        taskInfo:
          name: data-ingestion-op
      model-evaluator-op:
        cachingOptions: {}
        componentRef:
          name: comp-model-evaluator-op
        dependentTasks:
        - train-model-op
        - train-model-op-2
        - train-model-op-3
        - train-test-splitter-op
        inputs:
          artifacts:
            decision_tree_model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: train-model-op
            linear_regression_model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: train-model-op-2
            logistic_regression_model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: train-model-op-3
            testing_data:
              taskOutputArtifact:
                outputArtifactKey: testing_data
                producerTask: train-test-splitter-op
          parameters:
            model_bucket_name:
              componentInputParameter: model_bucket
            prod_model_blob:
              runtimeValue:
                constant: production_model/model.joblib
        taskInfo:
          name: model-evaluator-op
      train-model-op:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model-op
        dependentTasks:
        - train-test-splitter-op
        inputs:
          artifacts:
            training_data:
              taskOutputArtifact:
                outputArtifactKey: training_data
                producerTask: train-test-splitter-op
          parameters:
            image:
              runtimeValue:
                constant: europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-dt:latest
        taskInfo:
          name: train-decision-tree
      train-model-op-2:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model-op-2
        dependentTasks:
        - train-test-splitter-op
        inputs:
          artifacts:
            training_data:
              taskOutputArtifact:
                outputArtifactKey: training_data
                producerTask: train-test-splitter-op
          parameters:
            image:
              runtimeValue:
                constant: europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-lr:latest
        taskInfo:
          name: train-linear-regression
      train-model-op-3:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model-op-3
        dependentTasks:
        - train-test-splitter-op
        inputs:
          artifacts:
            training_data:
              taskOutputArtifact:
                outputArtifactKey: training_data
                producerTask: train-test-splitter-op
          parameters:
            image:
              runtimeValue:
                constant: europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-logr:latest
        taskInfo:
          name: train-logistic-regression
      train-test-splitter-op:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-test-splitter-op
        dependentTasks:
        - data-ingestion-op
        inputs:
          artifacts:
            input_dataset:
              taskOutputArtifact:
                outputArtifactKey: raw_dataset
                producerTask: data-ingestion-op
        taskInfo:
          name: train-test-splitter-op
  inputDefinitions:
    parameters:
      cd_trigger_id:
        defaultValue: deploy-wine-app-trigger
        isOptional: true
        parameterType: STRING
      data_bucket:
        defaultValue: yannick-wine-data
        isOptional: true
        parameterType: STRING
      model_bucket:
        defaultValue: yannick-wine-models
        isOptional: true
        parameterType: STRING
      project_id:
        defaultValue: data-engineering-vm
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.6
