# PIPELINE DEFINITION
# Name: wine-quality-training-pipeline
# Description: Trains, evaluates, and triggers deployment for a wine quality model.
# Inputs:
#    cd_trigger_id: str [Default: 'deploy-wine-app-trigger']
#    data_bucket: str [Default: 'yannick-wine-data']
#    model_bucket: str [Default: 'yannick-wine-models']
#    project_id: str [Default: 'data-engineering-vm']
components:
  comp-condition-1:
    dag:
      tasks:
        trigger-cd-pipeline:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-trigger-cd-pipeline
          inputs:
            parameters:
              new_model_uri:
                componentInputParameter: pipelinechannel--evaluate-models-Output
              project_id:
                componentInputParameter: pipelinechannel--project_id
              trigger_id:
                componentInputParameter: pipelinechannel--cd_trigger_id
          taskInfo:
            name: trigger-cd-pipeline
    inputDefinitions:
      parameters:
        pipelinechannel--cd_trigger_id:
          parameterType: STRING
        pipelinechannel--evaluate-models-Output:
          parameterType: STRING
        pipelinechannel--project_id:
          parameterType: STRING
  comp-evaluate-models:
    executorLabel: exec-evaluate-models
    inputDefinitions:
      artifacts:
        decision_tree_model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
        linear_regression_model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
        logistic_regression_model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
        processed_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        model_bucket_name:
          parameterType: STRING
        prod_model_blob:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-preprocess-data:
    executorLabel: exec-preprocess-data
    inputDefinitions:
      parameters:
        data_bucket_name:
          parameterType: STRING
        raw_data_path:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        processed_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
  comp-train-model:
    executorLabel: exec-train-model
    inputDefinitions:
      artifacts:
        processed_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        image_url:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
  comp-train-model-2:
    executorLabel: exec-train-model-2
    inputDefinitions:
      artifacts:
        processed_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        image_url:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
  comp-train-model-3:
    executorLabel: exec-train-model-3
    inputDefinitions:
      artifacts:
        processed_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        image_url:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
  comp-trigger-cd-pipeline:
    executorLabel: exec-trigger-cd-pipeline
    inputDefinitions:
      parameters:
        new_model_uri:
          parameterType: STRING
        project_id:
          parameterType: STRING
        trigger_id:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-evaluate-models:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - evaluate_models
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef evaluate_models(\n    processed_data: Input[Dataset],\n    decision_tree_model:\
          \ Input[Model],\n    linear_regression_model: Input[Model],\n    logistic_regression_model:\
          \ Input[Model],\n    model_bucket_name: str,\n    prod_model_blob: str,\n\
          ) -> str:\n    \"\"\"Evaluates models and returns 'deploy' or 'keep_old'.\"\
          \"\"\n    # This import is also INSIDE the function.\n    from kfp.dsl import\
          \ ContainerSpec\n\n    return ContainerSpec(\n        image='europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-evaluator:latest',\n\
          \        command=[\n            \"python3\", \"component.py\",\n       \
          \     \"--processed-data-path\", processed_data.path,\n            \"--decision-tree-model-path\"\
          , decision_tree_model.path,\n            \"--linear-regression-model-path\"\
          , linear_regression_model.path,\n            \"--logistic-regression-model-path\"\
          , logistic_regression_model.path,\n            \"--model-bucket-name\",\
          \ model_bucket_name,\n            \"--prod-model-blob\", prod_model_blob,\n\
          \            \"--output-path\", dsl.OutputPath(str),\n        ]\n    )\n\
          \n"
        image: python:3.9
    exec-preprocess-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - preprocess_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef preprocess_data(\n    data_bucket_name: str,\n    raw_data_path:\
          \ str,\n    processed_data: Output[Dataset],\n):\n    \"\"\"Initial component\
          \ to load, split, and process the raw data.\"\"\"\n    pass\n\n"
        image: europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/data-preprocessor:latest
    exec-train-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model(\n    image_url: str,\n    processed_data: Input[Dataset],\n\
          \    model: Output[Model],\n):\n    \"\"\"A generic training component that\
          \ takes a Docker image URL.\"\"\"\n    # This import is now INSIDE the function,\
          \ making it self-contained.\n    from kfp.dsl import ContainerSpec\n\n \
          \   return ContainerSpec(\n        image=image_url,\n        command=[\n\
          \            \"python3\",\n            \"component.py\",\n            \"\
          --processed-data-path\",\n            processed_data.path,\n           \
          \ \"--model-artifact-path\",\n            model.path,\n        ]\n    )\n\
          \n"
        image: python:3.9
    exec-train-model-2:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model(\n    image_url: str,\n    processed_data: Input[Dataset],\n\
          \    model: Output[Model],\n):\n    \"\"\"A generic training component that\
          \ takes a Docker image URL.\"\"\"\n    # This import is now INSIDE the function,\
          \ making it self-contained.\n    from kfp.dsl import ContainerSpec\n\n \
          \   return ContainerSpec(\n        image=image_url,\n        command=[\n\
          \            \"python3\",\n            \"component.py\",\n            \"\
          --processed-data-path\",\n            processed_data.path,\n           \
          \ \"--model-artifact-path\",\n            model.path,\n        ]\n    )\n\
          \n"
        image: python:3.9
    exec-train-model-3:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model(\n    image_url: str,\n    processed_data: Input[Dataset],\n\
          \    model: Output[Model],\n):\n    \"\"\"A generic training component that\
          \ takes a Docker image URL.\"\"\"\n    # This import is now INSIDE the function,\
          \ making it self-contained.\n    from kfp.dsl import ContainerSpec\n\n \
          \   return ContainerSpec(\n        image=image_url,\n        command=[\n\
          \            \"python3\",\n            \"component.py\",\n            \"\
          --processed-data-path\",\n            processed_data.path,\n           \
          \ \"--model-artifact-path\",\n            model.path,\n        ]\n    )\n\
          \n"
        image: python:3.9
    exec-trigger-cd-pipeline:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - trigger_cd_pipeline
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.6'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef trigger_cd_pipeline(\n    project_id: str,\n    trigger_id: str,\n\
          \    new_model_uri: str,\n):\n    \"\"\"Triggers the Cloud Build deployment\
          \ pipeline.\"\"\"\n    pass\n\n"
        image: europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/trigger-cd:latest
pipelineInfo:
  description: Trains, evaluates, and triggers deployment for a wine quality model.
  name: wine-quality-training-pipeline
root:
  dag:
    tasks:
      condition-1:
        componentRef:
          name: comp-condition-1
        dependentTasks:
        - evaluate-models
        inputs:
          parameters:
            pipelinechannel--cd_trigger_id:
              componentInputParameter: cd_trigger_id
            pipelinechannel--evaluate-models-Output:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: evaluate-models
            pipelinechannel--project_id:
              componentInputParameter: project_id
        taskInfo:
          name: if-new-model-is-better
        triggerPolicy:
          condition: inputs.parameter_values['pipelinechannel--evaluate-models-Output']
            != 'keep_old'
      evaluate-models:
        cachingOptions: {}
        componentRef:
          name: comp-evaluate-models
        dependentTasks:
        - preprocess-data
        - train-model
        - train-model-2
        - train-model-3
        inputs:
          artifacts:
            decision_tree_model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: train-model
            linear_regression_model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: train-model-2
            logistic_regression_model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: train-model-3
            processed_data:
              taskOutputArtifact:
                outputArtifactKey: processed_data
                producerTask: preprocess-data
          parameters:
            model_bucket_name:
              componentInputParameter: model_bucket
            prod_model_blob:
              runtimeValue:
                constant: production_model/model.joblib
        taskInfo:
          name: evaluate-models
      preprocess-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-preprocess-data
        inputs:
          parameters:
            data_bucket_name:
              componentInputParameter: data_bucket
            raw_data_path:
              runtimeValue:
                constant: raw/WineQT.csv
        taskInfo:
          name: preprocess-data
      train-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model
        dependentTasks:
        - preprocess-data
        inputs:
          artifacts:
            processed_data:
              taskOutputArtifact:
                outputArtifactKey: processed_data
                producerTask: preprocess-data
          parameters:
            image_url:
              runtimeValue:
                constant: europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-dt:latest
        taskInfo:
          name: train-model
      train-model-2:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model-2
        dependentTasks:
        - preprocess-data
        inputs:
          artifacts:
            processed_data:
              taskOutputArtifact:
                outputArtifactKey: processed_data
                producerTask: preprocess-data
          parameters:
            image_url:
              runtimeValue:
                constant: europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-lr:latest
        taskInfo:
          name: train-model-2
      train-model-3:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model-3
        dependentTasks:
        - preprocess-data
        inputs:
          artifacts:
            processed_data:
              taskOutputArtifact:
                outputArtifactKey: processed_data
                producerTask: preprocess-data
          parameters:
            image_url:
              runtimeValue:
                constant: europe-west4-docker.pkg.dev/data-engineering-vm/yannick-wine-repo/model-trainer-logr:latest
        taskInfo:
          name: train-model-3
  inputDefinitions:
    parameters:
      cd_trigger_id:
        defaultValue: deploy-wine-app-trigger
        isOptional: true
        parameterType: STRING
      data_bucket:
        defaultValue: yannick-wine-data
        isOptional: true
        parameterType: STRING
      model_bucket:
        defaultValue: yannick-wine-models
        isOptional: true
        parameterType: STRING
      project_id:
        defaultValue: data-engineering-vm
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.6
